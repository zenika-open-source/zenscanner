"""
Django settings for zenscanner project.

Generated by 'django-admin startproject' using Django 3.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import sentry_sdk
from sentry_sdk.integrations.django import DjangoIntegration
import os
import dj_database_url
from django.core.management.utils import get_random_secret_key


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
if not os.getenv("SECRET_KEY", None):
    os.environ["SECRET_KEY"] = get_random_secret_key()
SECRET_KEY = os.getenv("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv("DEBUG", "1") == "1"
# SECURITY WARNING: You may change this value!
ALLOWED_HOSTS = os.getenv("ALLOWED_HOSTS", "*").split(";")

INSTALLED_APPS = [
    'corsheaders',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.staticfiles',
    'core'
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.middleware.common.CommonMiddleware',
]

ROOT_URLCONF = 'zenscanner.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'zenscanner.wsgi.application'

WEBUI_URI = 'https://webapp-zenscanner.znk.fr/'

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

if os.environ.get("DATABASE_URL", None):
    DATABASES = {'default': dj_database_url.config()}
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

AUTH_USER_MODEL = 'core.User'

STATIC_URL = '/static/'
STATICFILES_DIRS = ['/zenscanner/app/']

CELERY_BROKER_URL = 'redis://127.0.0.1:6379'
CELERY_RESULT_BACKEND = 'redis://127.0.0.1:6379'
CELERY_RESULT_EXPIRES = None  # Task Status expiration


"""
Upload to S3 configuration

UPLOAD_TYPE = "s3"
UPLOAD_ENDPOINT = "play.minio.io:9000"
UPLOAD_BUCKET = "uploadbucket"
UPLOAD_ACCESS_KEY = "Q3AM3UQ867SPQQA43P2F"
UPLOAD_SECRET_KEY = "zuf+tfteSlswRu7BJ86wekitnifILbZam1KYY3TG"
UPLOAD_REGION = "us-east-1"
"""

UPLOAD_TYPE = "local"
UPLOAD_DIR = "/tmp/zenscanner"

if os.getenv("ENABLE_SENTRY", True):
    sentry_sdk.init(
        dsn="https://4b11eda41c2c4282bf031c11b41aac92@o491089.ingest.sentry.io/4504315359920128",
        integrations=[
            DjangoIntegration(),
        ],
        traces_sample_rate=0,
        auto_session_tracking=False,
        release="1.0.0",
        environment="production",
        send_default_pii=False
    )

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

API_URL = os.getenv("API_URL", "localhost:8000")

EMAIL_BACKEND = os.getenv("EMAIL_BACKEND", None)  # Example: "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = os.getenv("EMAIL_HOST", None)
EMAIL_PORT = os.getenv("EMAIL_PORT", None)

# CORS is needed if front is deployed on another domain
CORS_ALLOWED_ORIGINS = os.getenv("CORS_ALLOWED_ORIGINS", "https://localhost:8080").split(";")

CORS_ALLOW_CREDENTIALS = True  # Allow cross domain cookies
SESSION_COOKIE_SAMESITE = "None"  # Allow cross domain cookies
SESSION_COOKIE_SECURE = True  # SameSite None require SecureCookie
SESSION_DURATION = 86400  # Session duration in sec

DATA_UPLOAD_MAX_MEMORY_SIZE = 104857600  # Max Upload size 100 Mo

REGISTRATION_ENABLED = os.getenv("REGISTRATION_ENABLED", False)
REGISTRATION_DOMAINS = os.getenv("REGISTRATION_DOMAINS", "").split(";")

NINJA_PAGINATION_PER_PAGE = 10

SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https') if os.getenv("PROXY_MODE", None) else None
USE_X_FORWARDED_PORT = os.getenv("PROXY_MODE", False)

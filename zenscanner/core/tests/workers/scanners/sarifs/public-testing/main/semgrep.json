{"version": "2.1.0", "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.4.json", "runs": [{"tool": {"driver": {"name": "Semgrep", "rules": [{"id": "python.lang.security.use-defused-xml.use-defused-xml", "name": "python.lang.security.use-defused-xml.use-defused-xml", "helpUri": "https://semgrep.dev/r/python.lang.security.use-defused-xml.use-defused-xml"}, {"id": "generic.secrets.security.detected-private-key.detected-private-key", "name": "generic.secrets.security.detected-private-key.detected-private-key", "helpUri": "https://semgrep.dev/r/generic.secrets.security.detected-private-key.detected-private-key"}, {"id": "python.lang.security.audit.dangerous-system-call.dangerous-system-call", "name": "python.lang.security.audit.dangerous-system-call.dangerous-system-call", "helpUri": "https://semgrep.dev/r/python.lang.security.audit.dangerous-system-call.dangerous-system-call"}]}}, "results": [{"message": {"text": "The Python documentation recommends using `defusedxml` instead of `xml` because the native Python `xml` library is vulnerable to XML External Entity (XXE) attacks. These attacks can leak confidential data and \"XML bombs\" can cause denial of service."}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "/script.py"}, "region": {"snippet": {"text": "import xml"}, "startLine": 2, "endLine": 2}}}], "level": "ERROR", "ruleId": "python.lang.security.use-defused-xml.use-defused-xml"}, {"message": {"text": "Private Key detected. This is a sensitive credential and should not be hardcoded here. Instead, store this in a separate, private file."}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "/rsa_secret"}, "region": {"snippet": {"text": "-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn"}, "startLine": 1, "endLine": 2}}}], "level": "ERROR", "ruleId": "generic.secrets.security.detected-private-key.detected-private-key"}, {"message": {"text": "Found dynamic content used in a system call. This is dangerous if external data can reach this function call because it allows a malicious actor to execute commands. Use the 'subprocess' module instead, which is easier to use without accidentally exposing a command injection vulnerability."}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "/script.py"}, "region": {"snippet": {"text": "os.system(sys.argv[1])"}, "startLine": 7, "endLine": 7}}}], "level": "ERROR", "ruleId": "python.lang.security.audit.dangerous-system-call.dangerous-system-call"}]}]}